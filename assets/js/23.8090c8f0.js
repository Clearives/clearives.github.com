(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{392:function(t,s,a){"use strict";a.r(s);var n=a(20),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("ul",[a("li",[a("a",{attrs:{href:"#%E5%BC%82%E6%AD%A5%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF"}},[t._v("异步和事件循环")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#JavaScript%E6%98%AF%E5%8D%95%E7%BA%BF%E7%A8%8B"}},[t._v("JavaScript是单线程")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#JavaScript%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5"}},[t._v("JavaScript同步与异步")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%90%8C%E6%AD%A5"}},[t._v("同步")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%BC%82%E6%AD%A5"}},[t._v("异步")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BB%BB%E5%8A%A1%E9%98%9F%E5%88%97"}},[t._v("任务队列")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF"}},[t._v("事件循环")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%BE%AE%E4%BB%BB%E5%8A%A1Microtasks%E5%AE%8F%E4%BB%BB%E5%8A%A1macrotasks"}},[t._v("微任务(Microtasks)、宏任务(macrotasks)")])])])])])])]),t._v(" "),a("h1",{attrs:{id:"异步和事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步和事件循环"}},[t._v("#")]),t._v(" 异步和事件循环")]),t._v(" "),a("h2",{attrs:{id:"javascript是单线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript是单线程"}},[t._v("#")]),t._v(" JavaScript是单线程")]),t._v(" "),a("blockquote",[a("p",[t._v("JS引擎中负责解释和执行JavaScript代码的线程只有一个,但是实际上还存在其他的线程。例如：处理AJAX请求的线程、处理DOM事件的线程、定时器线程、读写文件的线程(例如在Node.js中)等等,可以理解为任务队列")])]),t._v(" "),a("h2",{attrs:{id:"javascript同步与异步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript同步与异步"}},[t._v("#")]),t._v(" JavaScript同步与异步")]),t._v(" "),a("h3",{attrs:{id:"同步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步"}},[t._v("#")]),t._v(" 同步")]),t._v(" "),a("blockquote",[a("p",[t._v("同步,也就是说按照顺序去做")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node02'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出：node01,node02")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"异步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步"}},[t._v("#")]),t._v(" 异步")]),t._v(" "),a("blockquote",[a("p",[t._v("异步,也就是说不完全按照顺序去做")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node02'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node03'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出：node01,node03,node02")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("异步实现理解:")]),t._v(" "),a("ul",[a("li",[t._v("1、主线程发起一个异步任务，工作线程接收任务")]),t._v(" "),a("li",[t._v("2、主线程可以继续执行后面的代码，同时工作线程执行异步任务")]),t._v(" "),a("li",[t._v("3、工作线程完成任务后，通知主线程")]),t._v(" "),a("li",[t._v("4、主线程收到通知后，执行相关操作，也就是我们所谓的回调函数")])]),t._v(" "),a("h2",{attrs:{id:"任务队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任务队列"}},[t._v("#")]),t._v(" 任务队列")]),t._v(" "),a("p",[t._v("一个 JavaScript 运行时包含了一个待处理的消息队列。每一个消息都关联着一个用以处理这个消息的函数。在事件循环期间的某个时刻，运行时从最先进入队列的消息开始处理队列中的消息。为此，这个消息会被移出队列，并作为输入参数调用与之关联的函数。正如前面所提到的，调用一个函数总是会为其创造一个新的栈帧（函数调用形成了一个栈帧）。函数的处理会一直进行到执行栈再次为空为止；然后事件循环将会处理队列中的下一个消息（如果还有的话）。")]),t._v(" "),a("h2",{attrs:{id:"事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[t._v("#")]),t._v(" 事件循环")]),t._v(" "),a("p",[t._v('主线程从"任务队列"中读取消息事件，这个过程是循环不断的，所以整个的这种运行机制又称为Event Loop（事件循环）')]),t._v(" "),a("h3",{attrs:{id:"微任务-microtasks-、宏任务-macrotasks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微任务-microtasks-、宏任务-macrotasks"}},[t._v("#")]),t._v(" 微任务(Microtasks)、宏任务(macrotasks)")]),t._v(" "),a("ul",[a("li",[t._v("macrotasks: 整体代码script setTimeout setInterval setImmediate I/O UI渲染")]),t._v(" "),a("li",[t._v("microtasks: Promise process.nextTick Object.observe MutationObserver")])]),t._v(" "),a("blockquote",[a("p",[t._v("JS异步机制，遇到宏任务，先执行宏任务，宏任务执行结束，如果有可执行的微任务，执行微任务至结束，再开始新的宏任务，如果没有执行的微任务，直接开始新的宏任务。")])]),t._v(" "),a("p",[t._v("参考：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.im/post/5b73d7a6518825610072b42b",target:"",rel:"noopener noreferrer"}},[t._v("微任务、宏任务与Event-Loop")])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/EventLoop",target:"",rel:"noopener noreferrer"}},[t._v("并发模型与事件循环")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);